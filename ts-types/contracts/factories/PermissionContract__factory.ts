/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { PermissionContract } from "../PermissionContract";

export class PermissionContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<PermissionContract> {
    return super.deploy(overrides || {}) as Promise<PermissionContract>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PermissionContract {
    return super.attach(address) as PermissionContract;
  }
  connect(signer: Signer): PermissionContract__factory {
    return super.connect(signer) as PermissionContract__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PermissionContract {
    return new Contract(address, _abi, signerOrProvider) as PermissionContract;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "CommissionBipsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "RootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelOwnershipTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "commissionBips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensRegistrar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeConfigs",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "shard",
        type: "bytes32",
      },
    ],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isNextOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRootProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "rootName_",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootNode_",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "label_",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootShard_",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof_",
        type: "bytes32[]",
      },
    ],
    name: "registerWithNFTOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "rootName_",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootNode_",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "rootShard_",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "owners_",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "labels_",
        type: "string[]",
      },
      {
        internalType: "bytes32[][]",
        name: "merkleProofs_",
        type: "bytes32[][]",
      },
    ],
    name: "registerWithProof",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "setCommissionBips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ensRegistrar_",
        type: "address",
      },
    ],
    name: "setENSRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "registrable_",
        type: "bool",
      },
    ],
    name: "setRegistrable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct PermissionContract.NodeFeeConfig",
        name: "feeConfig",
        type: "tuple",
      },
    ],
    name: "setRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nextOwner_",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526002805460ff60a01b1916600160a01b179055600060075534801561002857600080fd5b50600080546001600160a01b0319163290811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3611dbf806100776000396000f3fe60806040526004361061016e5760003560e01c806394e8eb04116100cb578063c7630a4d1161007f578063ed459df211610059578063ed459df2146103fb578063f2fde38b1461041b578063fe5a53771461043b57600080fd5b8063c7630a4d146103a5578063d2d71d5c146103bb578063d3c42489146103db57600080fd5b8063a7206cd6116100b0578063a7206cd61461031f578063b4c2d9c71461035a578063c2c589f01461036d57600080fd5b806394e8eb04146102df578063990dc9db146102ff57600080fd5b8063715018a61161012257806379ba50971161010757806379ba50971461029757806383ab002d146102ac5780638f32d59b146102bf57600080fd5b8063715018a61461026257806375edcbe01461027757600080fd5b8063407ac16411610153578063407ac164146101c257806343fb5f691461022157806355a8deab1461024157600080fd5b80631a67ef511461017a57806323452b9c146101ab57600080fd5b3661017557005b600080fd5b34801561018657600080fd5b506001546001600160a01b031633145b60405190151581526020015b60405180910390f35b3480156101b757600080fd5b506101c0610468565b005b3480156101ce57600080fd5b506102026101dd366004611756565b600660205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016101a2565b34801561022d57600080fd5b506101c061023c36600461176f565b6104fb565b34801561024d57600080fd5b5060025461019690600160a01b900460ff1681565b34801561026e57600080fd5b506101c06105a3565b34801561028357600080fd5b506101c0610292366004611791565b610669565b3480156102a357600080fd5b506101c061075f565b6101c06102ba3660046118a2565b610857565b3480156102cb57600080fd5b506000546001600160a01b03163314610196565b3480156102eb57600080fd5b506101c06102fa366004611756565b610b32565b34801561030b57600080fd5b506101c061031a36600461198e565b610c54565b34801561032b57600080fd5b5061034c61033a366004611756565b60009081526004602052604090205490565b6040519081526020016101a2565b6101c06103683660046119ba565b610d11565b34801561037957600080fd5b5060035461038d906001600160a01b031681565b6040516001600160a01b0390911681526020016101a2565b3480156103b157600080fd5b5061034c60075481565b3480156103c757600080fd5b506101c06103d6366004611a8a565b61118f565b3480156103e757600080fd5b506101c06103f6366004611aa7565b61122d565b34801561040757600080fd5b506002546001600160a01b03163314610196565b34801561042757600080fd5b506101c0610436366004611a8a565b611341565b34801561044757600080fd5b5061034c610456366004611756565b60046020526000908152604090205481565b6000546001600160a01b031633146104dc5760405162461bcd60e51b815260206004820152602c60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201526b3a103a34329037bbb732b91760a11b60648201526084015b60405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b0316331461056a5760405162461bcd60e51b815260206004820152602c60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201526b3a103a34329037bbb732b91760a11b60648201526084016104d3565b60028054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b6000546001600160a01b031633146106125760405162461bcd60e51b815260206004820152602c60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201526b3a103a34329037bbb732b91760a11b60648201526084016104d3565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6001546001600160a01b031633148061068c57506000546001600160a01b031633145b6106fe5760405162461bcd60e51b815260206004820152603d60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201527f742074686520726f6f742070726f7669646572206f72206f776e65722e00000060648201526084016104d3565b600082815260046020908152604091829020548251858152918201529081018290527f18bab1ace8e5759bc0eb57ac9b14b1f5f42506bd787d27e2a5e7085dcf0eacaf9060600160405180910390a160009182526004602052604090912055565b6002546001600160a01b031633146107e1576040805162461bcd60e51b81526020600482015260248101919091527f5065726d697373696f6e436f6e74726163743a2063757272656e74206f776e6560448201527f72206d757374207365742063616c6c6572206173206e657874206f776e65722e60648201526084016104d3565b6002805473ffffffffffffffffffffffffffffffffffffffff191690556000805460405133926001600160a01b03909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff191633179055565b600254600160a01b900460ff166108d65760405162461bcd60e51b815260206004820152602b60248201527f5065726d697373696f6e436f6e74726163743a20726567697374726174696f6e60448201527f20697320636c6f7365642e00000000000000000000000000000000000000000060648201526084016104d3565b84831480156108e457508481145b6109565760405162461bcd60e51b815260206004820152602260248201527f5065726d697373696f6e436f6e74726163743a20696e76616c6964207061726160448201527f6d7300000000000000000000000000000000000000000000000000000000000060648201526084016104d3565b600088815260066020908152604091829020825180840190935280546001600160a01b03168352600101549082018190523410156109fc5760405162461bcd60e51b815260206004820152602d60248201527f5065726d697373696f6e436f6e74726163743a20726567697374726174696f6e60448201527f206665652072657175697265640000000000000000000000000000000000000060648201526084016104d3565b600754600090879061271090610a129082611b31565b8460200151610a219190611b44565b610a2b9190611b5b565b610a359190611b44565b90508015610a8d578151610a49908261145b565b81516040518281526001600160a01b039091169030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35b60005b87811015610b2457610b128c8c8c8c8c86818110610ab057610ab0611b7d565b9050602002016020810190610ac59190611a8a565b8b8b87818110610ad757610ad7611b7d565b9050602002810190610ae99190611b93565b8b8b89818110610afb57610afb611b7d565b9050602002810190610b0d9190611bda565b611529565b80610b1c81611c24565b915050610a90565b505050505050505050505050565b6000546001600160a01b03163314610ba15760405162461bcd60e51b815260206004820152602c60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201526b3a103a34329037bbb732b91760a11b60648201526084016104d3565b612710811115610c195760405162461bcd60e51b815260206004820152602b60248201527f5065726d697373696f6e436f6e74726163743a20496e76616c696420636f6d6d60448201527f697373696f6e206269707300000000000000000000000000000000000000000060648201526084016104d3565b60078190556040518181527fec789caffc301be1dd1c40fb1a9c24451a547f9a8d295d86d04ef6f376d98e169060200160405180910390a150565b6000546001600160a01b03163314610cc35760405162461bcd60e51b815260206004820152602c60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201526b3a103a34329037bbb732b91760a11b60648201526084016104d3565b610ccd828261145b565b6040518181526001600160a01b0383169030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600254600160a01b900460ff16610d905760405162461bcd60e51b815260206004820152602b60248201527f5065726d697373696f6e436f6e74726163743a20726567697374726174696f6e60448201527f20697320636c6f7365642e00000000000000000000000000000000000000000060648201526084016104d3565b6000888a604051602001610dc092919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152918152815160209283012060008781526005845282812082825290935291205490915060ff1615610e655760405162461bcd60e51b8152602060048201526024808201527f5065726d697373696f6e436f6e74726163743a20616c726561647920636c616960448201527f6d65642e0000000000000000000000000000000000000000000000000000000060648201526084016104d3565b60008481526005602090815260408083208484529091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f6352211e000000000000000000000000000000000000000000000000000000008152600481018a90526001600160a01b038b1690636352211e90602401602060405180830381865afa158015610f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f299190611c5c565b6001600160a01b0316336001600160a01b031614610f895760405162461bcd60e51b815260206004820152601460248201527f63616c6c6572206d757374206265206f776e657200000000000000000000000060448201526064016104d3565b611053838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505060046000878152602001908152602001600020548c8a60405160200161103892919060609290921b6bffffffffffffffffffffffff1916825260148201527f2a00000000000000000000000000000000000000000000000000000000000000603482015260350190565b604051602081830303815290604052805190602001206116bf565b6110c55760405162461bcd60e51b815260206004820152602260248201527f5065726d697373696f6e436f6e74726163743a20496e76616c69642070726f6f60448201527f662e00000000000000000000000000000000000000000000000000000000000060648201526084016104d3565b6003546040517fe3e02ecd0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e3e02ecd90611116908b908b908b908b903390600401611ca4565b600060405180830381600087803b15801561113057600080fd5b505af1158015611144573d6000803e3d6000fd5b505050507f50f74ca45caac8020b8d891bd13ea5a2d79564986ee6a839f0d914896388322d86863360405161117b93929190611d29565b60405180910390a150505050505050505050565b6000546001600160a01b031633146111fe5760405162461bcd60e51b815260206004820152602c60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201526b3a103a34329037bbb732b91760a11b60648201526084016104d3565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001546001600160a01b031633148061125057506000546001600160a01b031633145b6112c25760405162461bcd60e51b815260206004820152603d60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201527f742074686520726f6f742070726f7669646572206f72206f776e65722e00000060648201526084016104d3565b6000828152600660209081526040918290208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039091161781558382015160019091018190558251858152918201527f6ff8895cab9b0756060f51407ed2675e887fdbddebb7c41ce5de2ea3c23da360910160405180910390a15050565b6000546001600160a01b031633146113b05760405162461bcd60e51b815260206004820152602c60248201527f5065726d697373696f6e436f6e74726163743a2063616c6c6572206973206e6f60448201526b3a103a34329037bbb732b91760a11b60648201526084016104d3565b6001600160a01b03811661142c5760405162461bcd60e51b815260206004820152603360248201527f5065726d697373696f6e436f6e74726163743a206e657874206f776e6572206960448201527f7320746865207a65726f20616464726573732e0000000000000000000000000060648201526084016104d3565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146114a8576040519150601f19603f3d011682016040523d82523d6000602084013e6114ad565b606091505b50509050806115245760405162461bcd60e51b815260206004820152603160248201527f556e61626c6520746f2073656e642076616c75653a20726563697069656e742060448201527f6d6179206861766520726576657274656400000000000000000000000000000060648201526084016104d3565b505050565b61158582828080602002602001604051908101604052809392919081815260200183836020028082843760009201829052508b81526004602090815260409182902054915191945061103893508b92508d918b918b9101611d56565b6115f75760405162461bcd60e51b815260206004820152602260248201527f5065726d697373696f6e436f6e74726163743a20496e76616c69642070726f6f60448201527f662e00000000000000000000000000000000000000000000000000000000000060648201526084016104d3565b6003546040517fe3e02ecd0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063e3e02ecd90611648908b908b90899089908c90600401611ca4565b600060405180830381600087803b15801561166257600080fd5b505af1158015611676573d6000803e3d6000fd5b505050507f50f74ca45caac8020b8d891bd13ea5a2d79564986ee6a839f0d914896388322d8484876040516116ad93929190611d29565b60405180910390a15050505050505050565b6000826116cc85846116d5565b14949350505050565b600081815b845181101561171a57611706828683815181106116f9576116f9611b7d565b6020026020010151611724565b91508061171281611c24565b9150506116da565b5090505b92915050565b600081831061174057600082815260208490526040902061174f565b60008381526020839052604090205b9392505050565b60006020828403121561176857600080fd5b5035919050565b60006020828403121561178157600080fd5b8135801515811461174f57600080fd5b600080604083850312156117a457600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126117da57600080fd5b813567ffffffffffffffff808211156117f5576117f56117b3565b604051601f8301601f19908116603f0116810190828211818310171561181d5761181d6117b3565b8160405283815286602085880101111561183657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008083601f84011261186857600080fd5b50813567ffffffffffffffff81111561188057600080fd5b6020830191508360208260051b850101111561189b57600080fd5b9250929050565b600080600080600080600080600060c08a8c0312156118c057600080fd5b893567ffffffffffffffff808211156118d857600080fd5b6118e48d838e016117c9565b9a5060208c0135995060408c0135985060608c013591508082111561190857600080fd5b6119148d838e01611856565b909850965060808c013591508082111561192d57600080fd5b6119398d838e01611856565b909650945060a08c013591508082111561195257600080fd5b5061195f8c828d01611856565b915080935050809150509295985092959850929598565b6001600160a01b038116811461198b57600080fd5b50565b600080604083850312156119a157600080fd5b82356119ac81611976565b946020939093013593505050565b600080600080600080600080600060e08a8c0312156119d857600080fd5b89356119e381611976565b985060208a0135975060408a013567ffffffffffffffff80821115611a0757600080fd5b611a138d838e016117c9565b985060608c0135975060808c0135915080821115611a3057600080fd5b818c0191508c601f830112611a4457600080fd5b813581811115611a5357600080fd5b8d6020828501011115611a6557600080fd5b6020830197508096505060a08c0135945060c08c013591508082111561195257600080fd5b600060208284031215611a9c57600080fd5b813561174f81611976565b6000808284036060811215611abb57600080fd5b833592506040601f1982011215611ad157600080fd5b506040516040810181811067ffffffffffffffff82111715611af557611af56117b3565b6040526020840135611b0681611976565b81526040939093013560208401525092909150565b634e487b7160e01b600052601160045260246000fd5b8181038181111561171e5761171e611b1b565b808202811582820484141761171e5761171e611b1b565b600082611b7857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611baa57600080fd5b83018035915067ffffffffffffffff821115611bc557600080fd5b60200191503681900382131561189b57600080fd5b6000808335601e19843603018112611bf157600080fd5b83018035915067ffffffffffffffff821115611c0c57600080fd5b6020019150600581901b360382131561189b57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c5557611c55611b1b565b5060010190565b600060208284031215611c6e57600080fd5b815161174f81611976565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b608081526000865180608084015260005b81811015611cd2576020818a0181015160a0868401015201611cb5565b50600060a08285010152601f19601f8201168301905086602084015260a0838203016040840152611d0760a082018688611c79565b915050611d1f60608301846001600160a01b03169052565b9695505050505050565b604081526000611d3d604083018587611c79565b90506001600160a01b0383166020830152949350505050565b6bffffffffffffffffffffffff198560601b1681528360148201528183603483013760009101603401908152939250505056fea26469706673582212203e727d7180ed8840bdf8e26b45d92492cb6e3cf1af333249985c35c3f2776fc964736f6c63430008110033";
