/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ENSRegistry } from "../ENSRegistry";

export class ENSRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ENSRegistry> {
    return super.deploy(overrides || {}) as Promise<ENSRegistry>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ENSRegistry {
    return super.attach(address) as ENSRegistry;
  }
  connect(signer: Signer): ENSRegistry__factory {
    return super.connect(signer) as ENSRegistry__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ENSRegistry {
    return new Contract(address, _abi, signerOrProvider) as ENSRegistry;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "NewResolver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "NewTTL",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "recordExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "resolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "setSubnodeOwner",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setSubnodeRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "ttl",
        type: "uint64",
      },
    ],
    name: "setTTL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "ttl",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002b671246754a97cc308460c01b6100a160201b60201c565b610045678fa13d760a6eb44260c01b6100a160201b60201c565b336000808060001b815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a4565b50565b611c67806100b36000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80635b0fc9c311610081578063cf4088231161005b578063cf40882314610225578063e985e9c514610241578063f79fe53814610271576100d4565b80635b0fc9c3146101d15780635ef2c7f0146101ed578063a22cb46514610209576100d4565b806314ab9038116100b257806314ab90381461016957806316a25cbd146101855780631896f70a146101b5576100d4565b80630178b8bf146100d957806302571be31461010957806306ab592314610139575b600080fd5b6100f360048036038101906100ee9190611804565b6102a1565b6040516101009190611872565b60405180910390f35b610123600480360381019061011e9190611804565b61031c565b6040516101309190611872565b60405180910390f35b610153600480360381019061014e91906118b9565b61047b565b604051610160919061191b565b60405180910390f35b610183600480360381019061017e9190611976565b6107b2565b005b61019f600480360381019061019a9190611804565b610a80565b6040516101ac91906119c5565b60405180910390f35b6101cf60048036038101906101ca91906119e0565b610aef565b005b6101eb60048036038101906101e691906119e0565b610dd5565b005b61020760048036038101906102029190611a20565b611085565b005b610223600480360381019061021e9190611ad3565b61110b565b005b61023f600480360381019061023a9190611b13565b611258565b005b61025b60048036038101906102569190611b7a565b6112d7565b6040516102689190611bc9565b60405180910390f35b61028b60048036038101906102869190611804565b6113a7565b6040516102989190611bc9565b60405180910390f35b60006102b76759b8a6c0d794372f60c01b611452565b6102cb670e052b8fe60cfb5560c01b611452565b6102df678de6e8b16d1e773e60c01b611452565b60008083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061033267d46891dfcba60b1160c01b611452565b610346679ee8b5801bed4c9b60c01b611452565b61035a67474f83423423388060c01b611452565b600080600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506103a867b237594ce7bf65b660c01b611452565b6103bc67fe3bd8085d80a19a60c01b611452565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104355761040367672834ad5df294ea60c01b611452565b61041767af007cc779205c2460c01b611452565b61042b677b3173f697a832ab60c01b611452565b6000915050610476565b61044967fabe14dfd5b58a1e60c01b611452565b61045d6765b6655c45cb951560c01b611452565b6104716726a620850f2cf0a560c01b611452565b809150505b919050565b6000610491678bad725fed1c4cb560c01b611452565b836104a66748850ebe9d571e5060c01b611452565b6104ba6739360894d5445cec60c01b611452565b6104ce6707b43cfcab9b31ca60c01b611452565b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061051c67926ed6540d40523360c01b611452565b610530673c12e13d05e9120c60c01b611452565b61054467377a7c387611c68a60c01b611452565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614801561058f575061058e67baea817dd4169d2060c01b611455565b5b8061063c5750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16801561063b575061063a67d766985679cfd8f960c01b611455565b5b5b61064557600080fd5b610659677f748757f3fd5c7c60c01b611452565b61066d67f8f248314a12fe5b60c01b611452565b6106816705548b44b38d6ba760c01b611452565b61069567f16794784dca5ed560c01b611452565b6106a967b0003f3581db4cc060c01b611452565b6106bd678829328a83d220b960c01b611452565b600086866040516020016106d2929190611c05565b6040516020818303038152906040528051906020012090506106fe6784231089a6e0e54a60c01b611452565b6107126735d99e6450110f5c60c01b611452565b61071c8186611460565b61073067c7ddc67184b4362a60c01b611452565b610744671e673f0c09bf151360c01b611452565b85877fce0457fe73731f824cc272376169235128c118b49d344817417c6d108d155e82876040516107759190611872565b60405180910390a36107916738a88dc88c76c95960c01b611452565b6107a5677379198d4b1e0f3360c01b611452565b8093505050509392505050565b6107c6676bd7dc15aabbf1b560c01b611452565b816107db6748850ebe9d571e5060c01b611452565b6107ef6739360894d5445cec60c01b611452565b6108036707b43cfcab9b31ca60c01b611452565b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061085167926ed6540d40523360c01b611452565b610865673c12e13d05e9120c60c01b611452565b61087967377a7c387611c68a60c01b611452565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480156108c457506108c367baea817dd4169d2060c01b611455565b5b806109715750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610970575061096f67d766985679cfd8f960c01b611455565b5b5b61097a57600080fd5b61098e677f748757f3fd5c7c60c01b611452565b6109a267f8f248314a12fe5b60c01b611452565b6109b667a5bcb8f0a81c13ad60c01b611452565b6109ca670cbb0efe9c360cc960c01b611452565b6109de672ffac057846cee8760c01b611452565b6109f26764ba3d4686d4af2560c01b611452565b837f1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa6884604051610a2291906119c5565b60405180910390a2610a3e67db0389ebced0241860c01b611452565b8260008086815260200190815260200160002060010160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050505050565b6000610a96677c9efd8d5a3caa6f60c01b611452565b610aaa67315274026a12f18d60c01b611452565b610abe67d50c04d92dbda51560c01b611452565b60008083815260200190815260200160002060010160149054906101000a900467ffffffffffffffff169050919050565b610b0367750df4495eb6ee9260c01b611452565b81610b186748850ebe9d571e5060c01b611452565b610b2c6739360894d5445cec60c01b611452565b610b406707b43cfcab9b31ca60c01b611452565b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610b8e67926ed6540d40523360c01b611452565b610ba2673c12e13d05e9120c60c01b611452565b610bb667377a7c387611c68a60c01b611452565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148015610c015750610c0067baea817dd4169d2060c01b611455565b5b80610cae5750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610cad5750610cac67d766985679cfd8f960c01b611455565b5b5b610cb757600080fd5b610ccb677f748757f3fd5c7c60c01b611452565b610cdf67f8f248314a12fe5b60c01b611452565b610cf36769bf9fdfd0d7947d60c01b611452565b610d0767f752261936ba5b7c60c01b611452565b610d1b67708db76e99978d5660c01b611452565b610d2f67059f710f50da8b5d60c01b611452565b837f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a084604051610d5f9190611872565b60405180910390a2610d7b676cfdaa99984057a960c01b611452565b8260008086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b610de9670bbd09fc3afd4ea760c01b611452565b81610dfe6748850ebe9d571e5060c01b611452565b610e126739360894d5445cec60c01b611452565b610e266707b43cfcab9b31ca60c01b611452565b600080600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610e7467926ed6540d40523360c01b611452565b610e88673c12e13d05e9120c60c01b611452565b610e9c67377a7c387611c68a60c01b611452565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148015610ee75750610ee667baea817dd4169d2060c01b611455565b5b80610f945750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610f935750610f9267d766985679cfd8f960c01b611455565b5b5b610f9d57600080fd5b610fb1677f748757f3fd5c7c60c01b611452565b610fc567f8f248314a12fe5b60c01b611452565b610fd96701b1fc387e547da960c01b611452565b610fed671b569cf89567cf1060c01b611452565b611001674ec315787d3fc74260c01b611452565b611015671eeaad0ba30cd1c960c01b611452565b61101f8484611460565b61103367809524f573d80ed160c01b611452565b611047670d025b06289f800a60c01b611452565b837fd4735d920b0f87494915f556dd9b54c8f309026070caea5c737245152564d266846040516110779190611872565b60405180910390a250505050565b611099676094a7eafc66a25b60c01b611452565b6110ad6744690f2807feb3a560c01b611452565b6110c1679d68e55e0226fd3860c01b611452565b60006110ce86868661047b565b90506110e4674fadc67b0200aaee60c01b611452565b6110f867a326f862bdf89eb460c01b611452565b6111038184846114e0565b505050505050565b61111f678ccba36e342ecea460c01b611452565b6111336752939da900f378b060c01b611452565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506111db67905c7c75c2f4cab460c01b611452565b6111ef67db0836e8390c4cb060c01b611452565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161124c9190611bc9565b60405180910390a35050565b61126c6748693952256a2ea060c01b611452565b61128067b61a5d8dac97fe7f60c01b611452565b61129467904f0eabbb0c976560c01b611452565b61129e8484610dd5565b6112b2673e109b0d37fb219d60c01b611452565b6112c66738455b974b5013cf60c01b611452565b6112d18483836114e0565b50505050565b60006112ed678881498a7133ea8560c01b611452565b61130167b5a94a2eac61cf1b60c01b611452565b61131567371d38b11337c75560c01b611452565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006113bd67de4206d951d95d4660c01b611452565b6113d167f677fbd6a293b7a260c01b611452565b6113e567565677819739f88e60c01b611452565b600073ffffffffffffffffffffffffffffffffffffffff1660008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50565b600060019050919050565b611474672002dd93bbfdbdea60c01b611452565b611488670752c92bec610cc960c01b611452565b8060008084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6114f46714407a2b4ba8ea6060c01b611452565b611508679fb151335de6f2cf60c01b611452565b61151c67aa970d6c59df2ce860c01b611452565b60008084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461166557611598678f47ebc7f03401eb60c01b611452565b6115ac67993c862363cb088260c01b611452565b8160008085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611614670c16d3ecb72b862f60c01b611452565b61162867f87884151a4046ca60c01b611452565b827f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a0836040516116589190611872565b60405180910390a261167a565b61167967fe54a03874db25e260c01b611452565b5b61168e67a75c0b230dafa7c960c01b611452565b6116a2676e7eaf8fc6c2a37e60c01b611452565b60008084815260200190815260200160002060010160149054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff16146117af576116fa6785db7a727028729c60c01b611452565b61170e67958db075461404be60c01b611452565b8060008085815260200190815260200160002060010160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555061175e679b954fe3b960791b60c01b611452565b61177267f0a611a2c476963760c01b611452565b827f1d4f9bbfc9cab89d66e1a1562f2233ccbf1308cb4f63de2ead5787adddb8fa68826040516117a291906119c5565b60405180910390a26117c4565b6117c367928eb757bc3e648460c01b611452565b5b505050565b600080fd5b6000819050919050565b6117e1816117ce565b81146117ec57600080fd5b50565b6000813590506117fe816117d8565b92915050565b60006020828403121561181a576118196117c9565b5b6000611828848285016117ef565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061185c82611831565b9050919050565b61186c81611851565b82525050565b60006020820190506118876000830184611863565b92915050565b61189681611851565b81146118a157600080fd5b50565b6000813590506118b38161188d565b92915050565b6000806000606084860312156118d2576118d16117c9565b5b60006118e0868287016117ef565b93505060206118f1868287016117ef565b9250506040611902868287016118a4565b9150509250925092565b611915816117ce565b82525050565b6000602082019050611930600083018461190c565b92915050565b600067ffffffffffffffff82169050919050565b61195381611936565b811461195e57600080fd5b50565b6000813590506119708161194a565b92915050565b6000806040838503121561198d5761198c6117c9565b5b600061199b858286016117ef565b92505060206119ac85828601611961565b9150509250929050565b6119bf81611936565b82525050565b60006020820190506119da60008301846119b6565b92915050565b600080604083850312156119f7576119f66117c9565b5b6000611a05858286016117ef565b9250506020611a16858286016118a4565b9150509250929050565b600080600080600060a08688031215611a3c57611a3b6117c9565b5b6000611a4a888289016117ef565b9550506020611a5b888289016117ef565b9450506040611a6c888289016118a4565b9350506060611a7d888289016118a4565b9250506080611a8e88828901611961565b9150509295509295909350565b60008115159050919050565b611ab081611a9b565b8114611abb57600080fd5b50565b600081359050611acd81611aa7565b92915050565b60008060408385031215611aea57611ae96117c9565b5b6000611af8858286016118a4565b9250506020611b0985828601611abe565b9150509250929050565b60008060008060808587031215611b2d57611b2c6117c9565b5b6000611b3b878288016117ef565b9450506020611b4c878288016118a4565b9350506040611b5d878288016118a4565b9250506060611b6e87828801611961565b91505092959194509250565b60008060408385031215611b9157611b906117c9565b5b6000611b9f858286016118a4565b9250506020611bb0858286016118a4565b9150509250929050565b611bc381611a9b565b82525050565b6000602082019050611bde6000830184611bba565b92915050565b6000819050919050565b611bff611bfa826117ce565b611be4565b82525050565b6000611c118285611bee565b602082019150611c218284611bee565b602082019150819050939250505056fea2646970667358221220158d7cd3f91eab0f9ff833a7670b49fd7deb0da2d5d493ac681fb433b40f540364736f6c63430008110033";
