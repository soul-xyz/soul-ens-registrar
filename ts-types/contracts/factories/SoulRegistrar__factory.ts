/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SoulRegistrar } from "../SoulRegistrar";

export class SoulRegistrar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    ensRegistry_: string,
    ensResolver_: string,
    permissionContract_: string,
    overrides?: Overrides
  ): Promise<SoulRegistrar> {
    return super.deploy(
      ensRegistry_,
      ensResolver_,
      permissionContract_,
      overrides || {}
    ) as Promise<SoulRegistrar>;
  }
  getDeployTransaction(
    ensRegistry_: string,
    ensResolver_: string,
    permissionContract_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      ensRegistry_,
      ensResolver_,
      permissionContract_,
      overrides || {}
    );
  }
  attach(address: string): SoulRegistrar {
    return super.attach(address) as SoulRegistrar;
  }
  connect(signer: Signer): SoulRegistrar__factory {
    return super.connect(signer) as SoulRegistrar__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulRegistrar {
    return new Contract(address, _abi, signerOrProvider) as SoulRegistrar;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ensRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ensResolver_",
        type: "address",
      },
      {
        internalType: "address",
        name: "permissionContract_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "permissionContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_newPermissionContract",
        type: "address",
      },
    ],
    name: "PermissionContractChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_ens",
        type: "string",
      },
    ],
    name: "RegisteredSubdomain",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPermissionContract",
        type: "address",
      },
    ],
    name: "changePermissionContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ensRegistry",
    outputs: [
      {
        internalType: "contract IENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensResolver",
    outputs: [
      {
        internalType: "contract IENSResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "permissionContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "rootName_",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootNode_",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "label_",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610aa1380380610aa183398101604081905261002f916100cf565b61003833610063565b600180546001600160a01b0319166001600160a01b039283161790559182166080521660a052610112565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100ca57600080fd5b919050565b6000806000606084860312156100e457600080fd5b6100ed846100b3565b92506100fb602085016100b3565b9150610109604085016100b3565b90509250925092565b60805160a05161094f6101526000396000818161010301528181610441015261050901526000818160af015281816103050152610470015261094f6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063adce1c5f1161005b578063adce1c5f146100fe578063d53cb71814610125578063e3e02ecd14610138578063f2fde38b1461014b57600080fd5b806327a9b7581461008d578063715018a6146100a25780637d73b231146100aa5780638da5cb5b146100ed575b600080fd5b6100a061009b36600461072a565b61015e565b005b6100a06101d9565b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b03166100d1565b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b6001546100d1906001600160a01b031681565b6100a06101463660046107c6565b6101ed565b6100a061015936600461072a565b6105b3565b610166610643565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040805182815260208101929092527f7645bd83ead041d16e70efea5ecd6d1678bc0b0c640dbe2ddf666a5c0d3fc4ef910160405180910390a150565b6101e1610643565b6101eb600061069d565b565b6001546001600160a01b031633146102725760405162461bcd60e51b815260206004820152603360248201527f454e535265676973747261723a2063616c6c6572206973206e6f74207468652060448201527f5065726d697373696f6e20436f6e74726163740000000000000000000000000060648201526084015b60405180910390fd5b600083836040516020016102879291906108bd565b60408051601f198184030181528282528051602091820120908301889052908201819052915060009060600160408051808303601f190181529082905280516020909101207f02571be30000000000000000000000000000000000000000000000000000000082526004820181905291506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be39060240160206040518083038186803b15801561034757600080fd5b505afa15801561035b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037f91906108cd565b6001600160a01b0316146103fb5760405162461bcd60e51b815260206004820152602560248201527f536f756c5265676973747261723a206c6162656c20697320616c72656164792060448201527f6f776e65640000000000000000000000000000000000000000000000000000006064820152608401610269565b6040517f5ef2c7f000000000000000000000000000000000000000000000000000000000815260048101879052602481018390526001600160a01b0384811660448301527f000000000000000000000000000000000000000000000000000000000000000081166064830152600060848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b1580156104b457600080fd5b505af11580156104c8573d6000803e3d6000fd5b50506040517fd5fa2b00000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0386811660248301527f000000000000000000000000000000000000000000000000000000000000000016925063d5fa2b009150604401600060405180830381600087803b15801561054f57600080fd5b505af1158015610563573d6000803e3d6000fd5b50505050826001600160a01b03167ff5251188e9425deffc90e67ce1569544b2566aab346fc214f89ead59e26ce3e086866040516105a29291906108ea565b60405180910390a250505050505050565b6105bb610643565b6001600160a01b0381166106375760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610269565b6106408161069d565b50565b6000546001600160a01b031633146101eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610269565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461064057600080fd5b803561072581610705565b919050565b60006020828403121561073c57600080fd5b813561074781610705565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008083601f84011261078f57600080fd5b50813567ffffffffffffffff8111156107a757600080fd5b6020830191508360208285010111156107bf57600080fd5b9250929050565b6000806000806000608086880312156107de57600080fd5b853567ffffffffffffffff808211156107f657600080fd5b818801915088601f83011261080a57600080fd5b81358181111561081c5761081c61074e565b604051601f8201601f19908116603f011681019083821181831017156108445761084461074e565b816040528281528b602084870101111561085d57600080fd5b8260208601602083013760006020848301015280995050505060208801359550604088013591508082111561089157600080fd5b5061089e8882890161077d565b90945092506108b190506060870161071a565b90509295509295909350565b8183823760009101908152919050565b6000602082840312156108df57600080fd5b815161074781610705565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220d8689d760d8dd3425ff0cab347a30766ecd91c5b857b2ce2a67d33f7fbe13ea664736f6c63430008090033";
