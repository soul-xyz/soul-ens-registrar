/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SoulRegistrar } from "../SoulRegistrar";

export class SoulRegistrar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    ensRegistry_: string,
    ensResolver_: string,
    overrides?: Overrides
  ): Promise<SoulRegistrar> {
    return super.deploy(
      ensRegistry_,
      ensResolver_,
      overrides || {}
    ) as Promise<SoulRegistrar>;
  }
  getDeployTransaction(
    ensRegistry_: string,
    ensResolver_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      ensRegistry_,
      ensResolver_,
      overrides || {}
    );
  }
  attach(address: string): SoulRegistrar {
    return super.attach(address) as SoulRegistrar;
  }
  connect(signer: Signer): SoulRegistrar__factory {
    return super.connect(signer) as SoulRegistrar__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulRegistrar {
    return new Contract(address, _abi, signerOrProvider) as SoulRegistrar;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IENS",
        name: "ensRegistry_",
        type: "address",
      },
      {
        internalType: "contract IENSResolver",
        name: "ensResolver_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "InvalidParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "RegistrationHasNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "SubdomainAlreadyOwned",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "requireRole",
        type: "string",
      },
    ],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "CommissionBipsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeePayout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "RegisteredSubdomain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "RegistrableUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "commissionBips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensRegistry",
    outputs: [
      {
        internalType: "contract IENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensResolver",
    outputs: [
      {
        internalType: "contract IENSResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeConfigs",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "registerWithNFTOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
      {
        internalType: "bytes32[][]",
        name: "merkleProofs",
        type: "bytes32[][]",
      },
    ],
    name: "registerWithProof",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "setCommissionBips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "setRegistrable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct SoulRegistrar.NodeFeeConfig",
        name: "feeConfig",
        type: "tuple",
      },
    ],
    name: "setRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001bc838038062001bc88339810160408190526200003491620001a8565b6200003f3362000066565b6001600160a01b03808316608052811660a0526200005e600162000090565b5050620001e7565b600180546001600160a01b03191690556200008d81620000e1602090811b62000ea317901c565b50565b6200009a62000131565b6005805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a5599060200160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6001600160a01b03811681146200008d57600080fd5b60008060408385031215620001bc57600080fd5b8251620001c98162000192565b6020840151909250620001dc8162000192565b809150509250929050565b60805160a05161199f620002296000396000818161037d0152818161127101526113390152600081816102700152818161118001526112a0015261199f6000f3fe60806040526004361061015f5760003560e01c806394e8eb04116100c0578063d3c4248911610074578063f2fde38b11610059578063f2fde38b14610401578063f60fd67b14610421578063fe5a53771461043457600080fd5b8063d3c42489146103c3578063e30c3978146103e357600080fd5b8063ad3b1b47116100a5578063ad3b1b471461034b578063adce1c5f1461036b578063c7630a4d1461039f57600080fd5b806394e8eb0414610318578063a6d4f04d1461033857600080fd5b806379ba5097116101175780638406c079116100fc5780638406c079146102aa5780638b45d08f146102bf5780638da5cb5b146102fa57600080fd5b806379ba5097146102495780637d73b2311461025e57600080fd5b806355a8deab1161014857806355a8deab146101ea578063715018a61461021457806375edcbe01461022957600080fd5b8063407ac1641461016457806343fb5f69146101c8575b600080fd5b34801561017057600080fd5b506101a461017f366004611472565b600660205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b3480156101d457600080fd5b506101e86101e336600461148b565b610461565b005b3480156101f657600080fd5b506005546102049060ff1681565b60405190151581526020016101bf565b34801561022057600080fd5b506101e86104b1565b34801561023557600080fd5b506101e86102443660046114ad565b6104c5565b34801561025557600080fd5b506101e8610584565b34801561026a57600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101bf565b3480156102b657600080fd5b50610292610612565b3480156102cb57600080fd5b506102046102da3660046114ad565b600460209081526000928352604080842090915290825290205460ff1681565b34801561030657600080fd5b506000546001600160a01b0316610292565b34801561032457600080fd5b506101e8610333366004611472565b610646565b6101e861034636600461151b565b6106ef565b34801561035757600080fd5b506101e86103663660046115dd565b610a24565b34801561037757600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ab57600080fd5b506103b560075481565b6040519081526020016101bf565b3480156103cf57600080fd5b506101e86103de366004611609565b610a7a565b3480156103ef57600080fd5b506001546001600160a01b0316610292565b34801561040d57600080fd5b506101e861041c36600461168b565b610b59565b6101e861042f3660046116a8565b610bd7565b34801561044057600080fd5b506103b561044f366004611472565b60036020526000908152604090205481565b610469610f00565b6005805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a559906020015b60405180910390a150565b6104b9610f00565b6104c36000610f5a565b565b6104cd610612565b6001600160a01b0316336001600160a01b0316146105335760405163973d02cb60e01b815260206004820152601060248201527f72656c61796572206f72206f776e65720000000000000000000000000000000060448201526064015b60405180910390fd5b600082815260036020526040908190208290555182907ffd69edeceaf1d6832d935be1fba54ca93bf17e71520c6c9ffc08d6e9529f8757906105789084815260200190565b60405180910390a25050565b60015433906001600160a01b031681146106065760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e65720000000000000000000000000000000000000000000000606482015260840161052a565b61060f81610f5a565b50565b6002546000906001600160a01b03161561063657506002546001600160a01b031690565b506000546001600160a01b031690565b61064e610f00565b6127108111156106ba576040517fa8c278dd00000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f496e76616c696420636f6d6d697373696f6e2062697073000000000000000000604482015260640161052a565b60078190556040518181527fec789caffc301be1dd1c40fb1a9c24451a547f9a8d295d86d04ef6f376d98e16906020016104a6565b60055460ff1661072b576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848314158061073a5750848114155b156107a1576040517fa8c278dd00000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f696e707574206172726179206c656e677468206e6f74206964656e746963616c604482015260640161052a565b600088815260066020908152604091829020825180840190935280546001600160a01b031683526001015490820181905234101561080b576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600754600090879061271090610821908261176a565b8460200151610830919061177d565b61083a9190611794565b610844919061177d565b9050801561089c5781516108589082610f80565b81516040518281526001600160a01b039091169030907faa2f029dce3e2f28194bcef6e2dbdb92992140b3b6c14b9a34026b0b376c1bf39060200160405180910390a35b60005b87811015610a175760008989838181106108bb576108bb6117b6565b90506020020160208101906108d0919061168b565b8c8989858181106108e3576108e36117b6565b90506020028101906108f591906117cc565b6040516020016109089493929190611813565b604051602081830303815290604052805190602001209050610a048c8c8c8c86818110610937576109376117b6565b905060200201602081019061094c919061168b565b8b8b8781811061095e5761095e6117b6565b905060200281019061097091906117cc565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92508c91508990508181106109b9576109b96117b6565b90506020028101906109cb9190611846565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525089925061109e915050565b5080610a0f81611890565b91505061089f565b5050505050505050505050565b610a2c610f00565b610a368282610f80565b6040518181526001600160a01b0383169030907f94ff26d0039076ded638218748282b9661d9e3a2c9bf0cf46b9ce2405a410c769060200160405180910390a35050565b610a82610612565b6001600160a01b0316336001600160a01b031614610ae35760405163973d02cb60e01b815260206004820152601060248201527f72656c61796572206f72206f776e657200000000000000000000000000000000604482015260640161052a565b6000828152600660209081526040918290208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178155838201516001909101819055915191825283917f6ff8895cab9b0756060f51407ed2675e887fdbddebb7c41ce5de2ea3c23da3609101610578565b610b61610f00565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610b9f6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60055460ff16610c13576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008789604051602001610c4392919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152918152815160209283012060008781526004845282812082825290935291205490915060ff1615610cad576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084815260046020818152604080842085855290915291829020805460ff1916600117905590517f6352211e0000000000000000000000000000000000000000000000000000000081526001600160a01b038b1691636352211e91610d19918c910190815260200190565b602060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a91906118c8565b6001600160a01b0316336001600160a01b031614610dbb5760405163973d02cb60e01b815260206004820152600960248201527f4e4654206f776e65720000000000000000000000000000000000000000000000604482015260640161052a565b6040516bffffffffffffffffffffffff1960608b901b166020820152603481018890527f2a000000000000000000000000000000000000000000000000000000000000006054820152600090605501604051602081830303815290604052805190602001209050610e978886338a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525089925061109e915050565b50505050505050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146104c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052a565b6001805473ffffffffffffffffffffffffffffffffffffffff1916905561060f81610ea3565b80471015610fd05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161052a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461101d576040519150601f19603f3d011682016040523d82523d6000602084013e611022565b606091505b50509050806110995760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161052a565b505050565b6000858152600360205260409020546110b9908390836113db565b6110ef576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000836040516020016111029190611909565b60408051601f1981840301815282825280516020918201209083018a9052908201819052915060009060600160408051808303601f190181529082905280516020909101207f02571be30000000000000000000000000000000000000000000000000000000082526004820181905291506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa1580156111c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111eb91906118c8565b6001600160a01b03161461122b576040517f73f81d0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5ef2c7f000000000000000000000000000000000000000000000000000000000815260048101899052602481018390526001600160a01b0387811660448301527f000000000000000000000000000000000000000000000000000000000000000081166064830152600060848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b1580156112e457600080fd5b505af11580156112f8573d6000803e3d6000fd5b50506040517fd5fa2b00000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0389811660248301527f000000000000000000000000000000000000000000000000000000000000000016925063d5fa2b009150604401600060405180830381600087803b15801561137f57600080fd5b505af1158015611393573d6000803e3d6000fd5b50505050877fd6288dcb40622d12005699aa256293bdbd786df6f192b2a95bccdd5169a8e20186886040516113c9929190611925565b60405180910390a25050505050505050565b6000826113e885846113f1565b14949350505050565b600081815b84518110156114365761142282868381518110611415576114156117b6565b6020026020010151611440565b91508061142e81611890565b9150506113f6565b5090505b92915050565b600081831061145c57600082815260208490526040902061146b565b60008381526020839052604090205b9392505050565b60006020828403121561148457600080fd5b5035919050565b60006020828403121561149d57600080fd5b8135801515811461146b57600080fd5b600080604083850312156114c057600080fd5b50508035926020909101359150565b60008083601f8401126114e157600080fd5b50813567ffffffffffffffff8111156114f957600080fd5b6020830191508360208260051b850101111561151457600080fd5b9250929050565b60008060008060008060008060a0898b03121561153757600080fd5b8835975060208901359650604089013567ffffffffffffffff8082111561155d57600080fd5b6115698c838d016114cf565b909850965060608b013591508082111561158257600080fd5b61158e8c838d016114cf565b909650945060808b01359150808211156115a757600080fd5b506115b48b828c016114cf565b999c989b5096995094979396929594505050565b6001600160a01b038116811461060f57600080fd5b600080604083850312156115f057600080fd5b82356115fb816115c8565b946020939093013593505050565b600080828403606081121561161d57600080fd5b833592506040601f198201121561163357600080fd5b506040516040810181811067ffffffffffffffff8211171561166557634e487b7160e01b600052604160045260246000fd5b6040526020840135611676816115c8565b81526040939093013560208401525092909150565b60006020828403121561169d57600080fd5b813561146b816115c8565b60008060008060008060008060c0898b0312156116c457600080fd5b88356116cf816115c8565b97506020890135965060408901359550606089013567ffffffffffffffff808211156116fa57600080fd5b818b0191508b601f83011261170e57600080fd5b81358181111561171d57600080fd5b8c602082850101111561172f57600080fd5b6020830197508096505060808b0135945060a08b01359150808211156115a757600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561143a5761143a611754565b808202811582820484141761143a5761143a611754565b6000826117b157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126117e357600080fd5b83018035915067ffffffffffffffff8211156117fe57600080fd5b60200191503681900382131561151457600080fd5b6bffffffffffffffffffffffff198560601b16815283601482015281836034830137600091016034019081529392505050565b6000808335601e1984360301811261185d57600080fd5b83018035915067ffffffffffffffff82111561187857600080fd5b6020019150600581901b360382131561151457600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118c1576118c1611754565b5060010190565b6000602082840312156118da57600080fd5b815161146b816115c8565b60005b838110156119005781810151838201526020016118e8565b50506000910152565b6000825161191b8184602087016118e5565b9190910192915050565b60408152600083518060408401526119448160608501602088016118e5565b6001600160a01b0393909316602083015250601f91909101601f19160160600191905056fea2646970667358221220003740fe845342e7b31a00190d9303d85900abf159b43d2a9491fb7e3505eda464736f6c63430008110033";
