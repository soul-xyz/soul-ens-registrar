/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SoulRegistrar } from "../SoulRegistrar";

export class SoulRegistrar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    ensRegistry_: string,
    ensResolver_: string,
    overrides?: Overrides
  ): Promise<SoulRegistrar> {
    return super.deploy(
      ensRegistry_,
      ensResolver_,
      overrides || {}
    ) as Promise<SoulRegistrar>;
  }
  getDeployTransaction(
    ensRegistry_: string,
    ensResolver_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      ensRegistry_,
      ensResolver_,
      overrides || {}
    );
  }
  attach(address: string): SoulRegistrar {
    return super.attach(address) as SoulRegistrar;
  }
  connect(signer: Signer): SoulRegistrar__factory {
    return super.connect(signer) as SoulRegistrar__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulRegistrar {
    return new Contract(address, _abi, signerOrProvider) as SoulRegistrar;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ensRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ensResolver_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "RegistrationHasNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "SubdomainAlreadyOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "CommissionBipsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeePayout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "RegisteredSubdomain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "RegistrableUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "commissionBips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensRegistry",
    outputs: [
      {
        internalType: "contract IENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensResolver",
    outputs: [
      {
        internalType: "contract IENSResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeConfigs",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "registerWithNFTOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
      {
        internalType: "bytes32[][]",
        name: "merkleProofs",
        type: "bytes32[][]",
      },
    ],
    name: "registerWithProof",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "setCommissionBips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "setRegistrable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct SoulRegistrar.NodeFeeConfig",
        name: "feeConfig",
        type: "tuple",
      },
    ],
    name: "setRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001ad538038062001ad58339810160408190526200003491620001af565b6200003f3362000066565b6001600160a01b03808316608052811660a0526200005e600162000090565b5050620001e7565b600180546001600160a01b03191690556200008d81620000e1602090811b62000db017901c565b50565b6200009a62000131565b6005805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a5599060200160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b80516001600160a01b0381168114620001aa57600080fd5b919050565b60008060408385031215620001c357600080fd5b620001ce8362000192565b9150620001de6020840162000192565b90509250929050565b60805160a0516118ac620002296000396000818161037d0152818161117e01526112460152600081816102700152818161108d01526111ad01526118ac6000f3fe60806040526004361061015f5760003560e01c806394e8eb04116100c0578063d3c4248911610074578063f2fde38b11610059578063f2fde38b14610401578063f60fd67b14610421578063fe5a53771461043457600080fd5b8063d3c42489146103c3578063e30c3978146103e357600080fd5b8063ad3b1b47116100a5578063ad3b1b471461034b578063adce1c5f1461036b578063c7630a4d1461039f57600080fd5b806394e8eb0414610318578063a6d4f04d1461033857600080fd5b806379ba5097116101175780638406c079116100fc5780638406c079146102aa5780638b45d08f146102bf5780638da5cb5b146102fa57600080fd5b806379ba5097146102495780637d73b2311461025e57600080fd5b806355a8deab1161014857806355a8deab146101ea578063715018a61461021457806375edcbe01461022957600080fd5b8063407ac1641461016457806343fb5f69146101c8575b600080fd5b34801561017057600080fd5b506101a461017f36600461137f565b600660205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b3480156101d457600080fd5b506101e86101e3366004611398565b610461565b005b3480156101f657600080fd5b506005546102049060ff1681565b60405190151581526020016101bf565b34801561022057600080fd5b506101e86104b1565b34801561023557600080fd5b506101e86102443660046113ba565b6104c5565b34801561025557600080fd5b506101e861054e565b34801561026a57600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101bf565b3480156102b657600080fd5b506102926105e1565b3480156102cb57600080fd5b506102046102da3660046113ba565b600460209081526000928352604080842090915290825290205460ff1681565b34801561030657600080fd5b506000546001600160a01b0316610292565b34801561032457600080fd5b506101e861033336600461137f565b610615565b6101e8610346366004611428565b61068e565b34801561035757600080fd5b506101e86103663660046114ea565b610993565b34801561037757600080fd5b506102927f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ab57600080fd5b506103b560075481565b6040519081526020016101bf565b3480156103cf57600080fd5b506101e86103de366004611516565b6109e9565b3480156103ef57600080fd5b506001546001600160a01b0316610292565b34801561040d57600080fd5b506101e861041c366004611598565b610a97565b6101e861042f3660046115b5565b610b15565b34801561044057600080fd5b506103b561044f36600461137f565b60036020526000908152604090205481565b610469610e0d565b6005805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a559906020015b60405180910390a150565b6104b9610e0d565b6104c36000610e67565b565b6104cd6105e1565b6001600160a01b0316336001600160a01b0316146104fd576040516282b42960e81b815260040160405180910390fd5b600082815260036020526040908190208290555182907ffd69edeceaf1d6832d935be1fba54ca93bf17e71520c6c9ffc08d6e9529f8757906105429084815260200190565b60405180910390a25050565b60015433906001600160a01b031681146105d55760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e6572000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6105de81610e67565b50565b6002546000906001600160a01b03161561060557506002546001600160a01b031690565b506000546001600160a01b031690565b61061d610e0d565b612710811115610659576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60078190556040518181527fec789caffc301be1dd1c40fb1a9c24451a547f9a8d295d86d04ef6f376d98e16906020016104a6565b60055460ff166106ca576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84831415806106d95750848114155b15610710576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600088815260066020908152604091829020825180840190935280546001600160a01b031683526001015490820181905234101561077a576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007546000908790612710906107909082611677565b846020015161079f919061168a565b6107a991906116a1565b6107b3919061168a565b9050801561080b5781516107c79082610e8d565b81516040518281526001600160a01b039091169030907faa2f029dce3e2f28194bcef6e2dbdb92992140b3b6c14b9a34026b0b376c1bf39060200160405180910390a35b60005b8781101561098657600089898381811061082a5761082a6116c3565b905060200201602081019061083f9190611598565b8c898985818110610852576108526116c3565b905060200281019061086491906116d9565b6040516020016108779493929190611720565b6040516020818303038152906040528051906020012090506109738c8c8c8c868181106108a6576108a66116c3565b90506020020160208101906108bb9190611598565b8b8b878181106108cd576108cd6116c3565b90506020028101906108df91906116d9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92508c9150899050818110610928576109286116c3565b905060200281019061093a9190611753565b80806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250899250610fab915050565b508061097e8161179d565b91505061080e565b5050505050505050505050565b61099b610e0d565b6109a58282610e8d565b6040518181526001600160a01b0383169030907f94ff26d0039076ded638218748282b9661d9e3a2c9bf0cf46b9ce2405a410c769060200160405180910390a35050565b6109f16105e1565b6001600160a01b0316336001600160a01b031614610a21576040516282b42960e81b815260040160405180910390fd5b6000828152600660209081526040918290208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178155838201516001909101819055915191825283917f6ff8895cab9b0756060f51407ed2675e887fdbddebb7c41ce5de2ea3c23da3609101610542565b610a9f610e0d565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610add6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60055460ff16610b51576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008789604051602001610b8192919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152918152815160209283012060008781526004845282812082825290935291205490915060ff1615610beb576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084815260046020818152604080842085855290915291829020805460ff1916600117905590517f6352211e0000000000000000000000000000000000000000000000000000000081526001600160a01b038b1691636352211e91610c57918c910190815260200190565b602060405180830381865afa158015610c74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9891906117d5565b6001600160a01b0316336001600160a01b031614610cc8576040516282b42960e81b815260040160405180910390fd5b6040516bffffffffffffffffffffffff1960608b901b166020820152603481018890527f2a000000000000000000000000000000000000000000000000000000000000006054820152600090605501604051602081830303815290604052805190602001209050610da48886338a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b918291850190849080828437600092019190915250899250610fab915050565b50505050505050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146104c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cc565b6001805473ffffffffffffffffffffffffffffffffffffffff191690556105de81610db0565b80471015610edd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016105cc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f2a576040519150601f19603f3d011682016040523d82523d6000602084013e610f2f565b606091505b5050905080610fa65760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105cc565b505050565b600085815260036020526040902054610fc6908390836112e8565b610ffc576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360405160200161100f9190611816565b60408051601f1981840301815282825280516020918201209083018a9052908201819052915060009060600160408051808303601f190181529082905280516020909101207f02571be30000000000000000000000000000000000000000000000000000000082526004820181905291506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa1580156110d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f891906117d5565b6001600160a01b031614611138576040517f73f81d0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5ef2c7f000000000000000000000000000000000000000000000000000000000815260048101899052602481018390526001600160a01b0387811660448301527f000000000000000000000000000000000000000000000000000000000000000081166064830152600060848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b1580156111f157600080fd5b505af1158015611205573d6000803e3d6000fd5b50506040517fd5fa2b00000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0389811660248301527f000000000000000000000000000000000000000000000000000000000000000016925063d5fa2b009150604401600060405180830381600087803b15801561128c57600080fd5b505af11580156112a0573d6000803e3d6000fd5b50505050877fd6288dcb40622d12005699aa256293bdbd786df6f192b2a95bccdd5169a8e20186886040516112d6929190611832565b60405180910390a25050505050505050565b6000826112f585846112fe565b14949350505050565b600081815b84518110156113435761132f82868381518110611322576113226116c3565b602002602001015161134d565b91508061133b8161179d565b915050611303565b5090505b92915050565b6000818310611369576000828152602084905260409020611378565b60008381526020839052604090205b9392505050565b60006020828403121561139157600080fd5b5035919050565b6000602082840312156113aa57600080fd5b8135801515811461137857600080fd5b600080604083850312156113cd57600080fd5b50508035926020909101359150565b60008083601f8401126113ee57600080fd5b50813567ffffffffffffffff81111561140657600080fd5b6020830191508360208260051b850101111561142157600080fd5b9250929050565b60008060008060008060008060a0898b03121561144457600080fd5b8835975060208901359650604089013567ffffffffffffffff8082111561146a57600080fd5b6114768c838d016113dc565b909850965060608b013591508082111561148f57600080fd5b61149b8c838d016113dc565b909650945060808b01359150808211156114b457600080fd5b506114c18b828c016113dc565b999c989b5096995094979396929594505050565b6001600160a01b03811681146105de57600080fd5b600080604083850312156114fd57600080fd5b8235611508816114d5565b946020939093013593505050565b600080828403606081121561152a57600080fd5b833592506040601f198201121561154057600080fd5b506040516040810181811067ffffffffffffffff8211171561157257634e487b7160e01b600052604160045260246000fd5b6040526020840135611583816114d5565b81526040939093013560208401525092909150565b6000602082840312156115aa57600080fd5b8135611378816114d5565b60008060008060008060008060c0898b0312156115d157600080fd5b88356115dc816114d5565b97506020890135965060408901359550606089013567ffffffffffffffff8082111561160757600080fd5b818b0191508b601f83011261161b57600080fd5b81358181111561162a57600080fd5b8c602082850101111561163c57600080fd5b6020830197508096505060808b0135945060a08b01359150808211156114b457600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561134757611347611661565b808202811582820484141761134757611347611661565b6000826116be57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126116f057600080fd5b83018035915067ffffffffffffffff82111561170b57600080fd5b60200191503681900382131561142157600080fd5b6bffffffffffffffffffffffff198560601b16815283601482015281836034830137600091016034019081529392505050565b6000808335601e1984360301811261176a57600080fd5b83018035915067ffffffffffffffff82111561178557600080fd5b6020019150600581901b360382131561142157600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117ce576117ce611661565b5060010190565b6000602082840312156117e757600080fd5b8151611378816114d5565b60005b8381101561180d5781810151838201526020016117f5565b50506000910152565b600082516118288184602087016117f2565b9190910192915050565b60408152600083518060408401526118518160608501602088016117f2565b6001600160a01b0393909316602083015250601f91909101601f19160160600191905056fea2646970667358221220364c7b561def0a9a1c835449d84daafd4f3cd12bb4b0ad6d8c3283ba5ff236c864736f6c63430008110033";
