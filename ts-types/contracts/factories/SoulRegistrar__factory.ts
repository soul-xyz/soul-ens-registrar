/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SoulRegistrar } from "../SoulRegistrar";

export class SoulRegistrar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    ensRegistry_: string,
    ensResolver_: string,
    usdc_: string,
    overrides?: Overrides
  ): Promise<SoulRegistrar> {
    return super.deploy(
      ensRegistry_,
      ensResolver_,
      usdc_,
      overrides || {}
    ) as Promise<SoulRegistrar>;
  }
  getDeployTransaction(
    ensRegistry_: string,
    ensResolver_: string,
    usdc_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      ensRegistry_,
      ensResolver_,
      usdc_,
      overrides || {}
    );
  }
  attach(address: string): SoulRegistrar {
    return super.attach(address) as SoulRegistrar;
  }
  connect(signer: Signer): SoulRegistrar__factory {
    return super.connect(signer) as SoulRegistrar__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulRegistrar {
    return new Contract(address, _abi, signerOrProvider) as SoulRegistrar;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ensRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ensResolver_",
        type: "address",
      },
      {
        internalType: "address",
        name: "usdc_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "RegistrationHasNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "SubdomainAlreadyOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "CommissionBipsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeePayout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "RegisteredSubdomain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "RegistrableUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRelayer",
        type: "address",
      },
    ],
    name: "RelayerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "commissionBips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensRegistry",
    outputs: [
      {
        internalType: "contract IENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensResolver",
    outputs: [
      {
        internalType: "contract IENSResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeConfigs",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "registerWithNFTOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
      {
        internalType: "bytes32[][]",
        name: "merkleProofs",
        type: "bytes32[][]",
      },
    ],
    name: "registerWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "setCommissionBips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "setRegistrable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct SoulRegistrar.NodeFeeConfig",
        name: "feeConfig",
        type: "tuple",
      },
    ],
    name: "setRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRelayer",
        type: "address",
      },
    ],
    name: "setRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001faf38038062001faf8339810160408190526200003491620001bc565b6200003f3362000073565b600160028190556001600160a01b0380851660805283811660a052821660c0526200006a906200009d565b50505062000206565b600180546001600160a01b03191690556200009a81620000ee602090811b62000e8917901c565b50565b620000a76200013e565b6006805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a5599060200160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146200019d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b80516001600160a01b0381168114620001b757600080fd5b919050565b600080600060608486031215620001d257600080fd5b620001dd846200019f565b9250620001ed602085016200019f565b9150620001fd604085016200019f565b90509250925092565b60805160a05160c051611d3a62000275600039600081816101a10152818161040d0152818161048f0152818161084f01526108cc01526000818161033101528181611293015261135b01526000818161029d015281816111a4015281816112c201526113fd0152611d3a6000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638b45d08f116100d8578063c7630a4d1161008c578063f2fde38b11610066578063f2fde38b1461038e578063f60fd67b146103a1578063fe5a5377146103b457600080fd5b8063c7630a4d14610353578063d3c424891461036a578063e30c39781461037d57600080fd5b806394e8eb04116100bd57806394e8eb0414610306578063a6d4f04d14610319578063adce1c5f1461032c57600080fd5b80638b45d08f146102c75780638da5cb5b146102f557600080fd5b80636548e9bc1161013a57806379ba50971161011457806379ba5097146102905780637d73b231146102985780638406c079146102bf57600080fd5b80636548e9bc14610262578063715018a61461027557806375edcbe01461027d57600080fd5b8063407ac1641161016b578063407ac164146101e057806343fb5f691461023257806355a8deab1461024557600080fd5b8063164e68de146101875780633e413bee1461019c575b600080fd5b61019a6101953660046117e9565b6103d4565b005b6101c37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6102136101ee366004611806565b600760205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016101d7565b61019a61024036600461182d565b6104fa565b6006546102529060ff1681565b60405190151581526020016101d7565b61019a6102703660046117e9565b61054a565b61019a6105ad565b61019a61028b36600461184a565b6105c1565b61019a61064a565b6101c37f000000000000000000000000000000000000000000000000000000000000000081565b6101c36106dd565b6102526102d536600461184a565b600560209081526000928352604080842090915290825290205460ff1681565b6000546001600160a01b03166101c3565b61019a610314366004611806565b610711565b61019a6103273660046118b8565b61078a565b6101c37f000000000000000000000000000000000000000000000000000000000000000081565b61035c60085481565b6040519081526020016101d7565b61019a610378366004611965565b610ac9565b6001546001600160a01b03166101c3565b61019a61039c3660046117e9565b610b77565b61019a6103af3660046119e7565b610bf5565b61035c6103c2366004611806565b60046020526000908152604090205481565b6103dc610ee6565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561045c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104809190611a93565b90506104b66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383610f40565b6040518181526001600160a01b0383169030907f94ff26d0039076ded638218748282b9661d9e3a2c9bf0cf46b9ce2405a410c769060200160405180910390a35050565b610502610ee6565b6006805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a559906020015b60405180910390a150565b610552610ee6565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f09bf35b7806e61e7baf86e6547c4221f69d130ccc0a19215d064685a89464a709060200161053f565b6105b5610ee6565b6105bf6000610fee565b565b6105c96106dd565b6001600160a01b0316336001600160a01b0316146105f9576040516282b42960e81b815260040160405180910390fd5b600082815260046020526040908190208290555182907ffd69edeceaf1d6832d935be1fba54ca93bf17e71520c6c9ffc08d6e9529f87579061063e9084815260200190565b60405180910390a25050565b60015433906001600160a01b031681146106d15760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e6572000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6106da81610fee565b50565b6003546000906001600160a01b03161561070157506003546001600160a01b031690565b506000546001600160a01b031690565b610719610ee6565b612710811115610755576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60088190556040518181527fec789caffc301be1dd1c40fb1a9c24451a547f9a8d295d86d04ef6f376d98e169060200161053f565b60065460ff166107c6576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107ce611014565b84831415806107dd5750848114155b15610814576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600088815260076020908152604091829020825180840190935280546001600160a01b03908116845260019091015491830182905261087b917f0000000000000000000000000000000000000000000000000000000000000000909116903390309061106b565b6008546000908790612710906108919082611ac2565b84602001516108a09190611ad5565b6108aa9190611aec565b6108b49190611ad5565b905080156109375781516108f3906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169083610f40565b81516040518281526001600160a01b039091169030907faa2f029dce3e2f28194bcef6e2dbdb92992140b3b6c14b9a34026b0b376c1bf39060200160405180910390a35b60005b87811015610ab257600089898381811061095657610956611b0e565b905060200201602081019061096b91906117e9565b8c89898581811061097e5761097e611b0e565b90506020028101906109909190611b24565b6040516020016109a39493929190611b6b565b604051602081830303815290604052805190602001209050610a9f8c8c8c8c868181106109d2576109d2611b0e565b90506020020160208101906109e791906117e9565b8b8b878181106109f9576109f9611b0e565b9050602002810190610a0b9190611b24565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92508c9150899050818110610a5457610a54611b0e565b9050602002810190610a669190611b9e565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508992506110c2915050565b5080610aaa81611be8565b91505061093a565b505050610abf6001600255565b5050505050505050565b610ad16106dd565b6001600160a01b0316336001600160a01b031614610b01576040516282b42960e81b815260040160405180910390fd5b6000828152600760209081526040918290208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178155838201516001909101819055915191825283917f6ff8895cab9b0756060f51407ed2675e887fdbddebb7c41ce5de2ea3c23da360910161063e565b610b7f610ee6565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610bbd6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60065460ff16610c31576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008789604051602001610c6192919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152918152815160209283012060008781526005845282812082825290935291205490915060ff1615610ccb576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084815260056020908152604080832084845290915290819020805460ff19166001179055517f6352211e000000000000000000000000000000000000000000000000000000008152600481018990526001600160a01b038a1690636352211e90602401602060405180830381865afa158015610d4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d719190611c20565b6001600160a01b0316336001600160a01b031614610da1576040516282b42960e81b815260040160405180910390fd5b6040516bffffffffffffffffffffffff1960608b901b166020820152603481018890527f2a000000000000000000000000000000000000000000000000000000000000006054820152600090605501604051602081830303815290604052805190602001209050610e7d8886338a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b9182918501908490808284376000920191909152508992506110c2915050565b50505050505050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146105bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106c8565b6040516001600160a01b038316602482015260448101829052610fe99084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526114b1565b505050565b6001805473ffffffffffffffffffffffffffffffffffffffff191690556106da81610e89565b60028054036110655760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106c8565b60028055565b6040516001600160a01b03808516602483015283166044820152606481018290526110bc9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610f85565b50505050565b6000858152600460205260409020546110dd90839083611596565b611113576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000836040516020016111269190611c61565b60408051601f1981840301815282825280516020918201209083018a9052908201819052915060009060600160408051808303601f190181529082905280516020909101207f02571be30000000000000000000000000000000000000000000000000000000082526004820181905291506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa1580156111eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120f9190611c20565b6001600160a01b03161461124f576040517f73f81d0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5ef2c7f000000000000000000000000000000000000000000000000000000000815260048101899052602481018390523060448201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166064830152600060848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b50506040517fd5fa2b00000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0389811660248301527f000000000000000000000000000000000000000000000000000000000000000016925063d5fa2b009150604401600060405180830381600087803b1580156113a157600080fd5b505af11580156113b5573d6000803e3d6000fd5b50506040517f06ab5923000000000000000000000000000000000000000000000000000000008152600481018b9052602481018590526001600160a01b0389811660448301527f00000000000000000000000000000000000000000000000000000000000000001692506306ab592391506064016020604051808303816000875af1158015611448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146c9190611a93565b50877fd6288dcb40622d12005699aa256293bdbd786df6f192b2a95bccdd5169a8e201868860405161149f929190611ca9565b60405180910390a25050505050505050565b6000611506826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115ac9092919063ffffffff16565b805190915015610fe957808060200190518101906115249190611cd4565b610fe95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106c8565b6000826115a385846115c3565b14949350505050565b60606115bb8484600085611612565b949350505050565b600081815b8451811015611608576115f4828683815181106115e7576115e7611b0e565b6020026020010151611704565b91508061160081611be8565b9150506115c8565b5090505b92915050565b60608247101561168a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106c8565b600080866001600160a01b031685876040516116a69190611c61565b60006040518083038185875af1925050503d80600081146116e3576040519150601f19603f3d011682016040523d82523d6000602084013e6116e8565b606091505b50915091506116f987838387611736565b979650505050505050565b600081831061172057600082815260208490526040902061172f565b60008381526020839052604090205b9392505050565b606083156117a557825160000361179e576001600160a01b0385163b61179e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106c8565b50816115bb565b6115bb83838151156117ba5781518083602001fd5b8060405162461bcd60e51b81526004016106c89190611cf1565b6001600160a01b03811681146106da57600080fd5b6000602082840312156117fb57600080fd5b813561172f816117d4565b60006020828403121561181857600080fd5b5035919050565b80151581146106da57600080fd5b60006020828403121561183f57600080fd5b813561172f8161181f565b6000806040838503121561185d57600080fd5b50508035926020909101359150565b60008083601f84011261187e57600080fd5b50813567ffffffffffffffff81111561189657600080fd5b6020830191508360208260051b85010111156118b157600080fd5b9250929050565b60008060008060008060008060a0898b0312156118d457600080fd5b8835975060208901359650604089013567ffffffffffffffff808211156118fa57600080fd5b6119068c838d0161186c565b909850965060608b013591508082111561191f57600080fd5b61192b8c838d0161186c565b909650945060808b013591508082111561194457600080fd5b506119518b828c0161186c565b999c989b5096995094979396929594505050565b600080828403606081121561197957600080fd5b833592506040601f198201121561198f57600080fd5b506040516040810181811067ffffffffffffffff821117156119c157634e487b7160e01b600052604160045260246000fd5b60405260208401356119d2816117d4565b81526040939093013560208401525092909150565b60008060008060008060008060c0898b031215611a0357600080fd5b8835611a0e816117d4565b97506020890135965060408901359550606089013567ffffffffffffffff80821115611a3957600080fd5b818b0191508b601f830112611a4d57600080fd5b813581811115611a5c57600080fd5b8c6020828501011115611a6e57600080fd5b6020830197508096505060808b0135945060a08b013591508082111561194457600080fd5b600060208284031215611aa557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561160c5761160c611aac565b808202811582820484141761160c5761160c611aac565b600082611b0957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611b3b57600080fd5b83018035915067ffffffffffffffff821115611b5657600080fd5b6020019150368190038213156118b157600080fd5b6bffffffffffffffffffffffff198560601b16815283601482015281836034830137600091016034019081529392505050565b6000808335601e19843603018112611bb557600080fd5b83018035915067ffffffffffffffff821115611bd057600080fd5b6020019150600581901b36038213156118b157600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c1957611c19611aac565b5060010190565b600060208284031215611c3257600080fd5b815161172f816117d4565b60005b83811015611c58578181015183820152602001611c40565b50506000910152565b60008251611c73818460208701611c3d565b9190910192915050565b60008151808452611c95816020860160208601611c3d565b601f01601f19169290920160200192915050565b604081526000611cbc6040830185611c7d565b90506001600160a01b03831660208301529392505050565b600060208284031215611ce657600080fd5b815161172f8161181f565b60208152600061172f6020830184611c7d56fea2646970667358221220df3f464cb14c757aafde74a056d04e685bc525b719f2e1dac74bcfe539f705ff64736f6c63430008110033";
