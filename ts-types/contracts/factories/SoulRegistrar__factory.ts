/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { SoulRegistrar } from "../SoulRegistrar";

export class SoulRegistrar__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    ensRegistry_: string,
    ensResolver_: string,
    overrides?: Overrides
  ): Promise<SoulRegistrar> {
    return super.deploy(
      ensRegistry_,
      ensResolver_,
      overrides || {}
    ) as Promise<SoulRegistrar>;
  }
  getDeployTransaction(
    ensRegistry_: string,
    ensResolver_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      ensRegistry_,
      ensResolver_,
      overrides || {}
    );
  }
  attach(address: string): SoulRegistrar {
    return super.attach(address) as SoulRegistrar;
  }
  connect(signer: Signer): SoulRegistrar__factory {
    return super.connect(signer) as SoulRegistrar__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SoulRegistrar {
    return new Contract(address, _abi, signerOrProvider) as SoulRegistrar;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "ensRegistry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "ensResolver_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProof",
    type: "error",
  },
  {
    inputs: [],
    name: "RegistrationHasNotStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "SubdomainAlreadyOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedAction",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "CommissionBipsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeePayout",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FeeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "RegisteredSubdomain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "RegistrableUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRelayer",
        type: "address",
      },
    ],
    name: "RelayerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "commissionBips",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensRegistry",
    outputs: [
      {
        internalType: "contract IENS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ensResolver",
    outputs: [
      {
        internalType: "contract IENSResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "feeConfigs",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "label",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "registerWithNFTOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
      {
        internalType: "bytes32[][]",
        name: "merkleProofs",
        type: "bytes32[][]",
      },
    ],
    name: "registerWithProof",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "registrable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newBips",
        type: "uint256",
      },
    ],
    name: "setCommissionBips",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootShard",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newRegistrable",
        type: "bool",
      },
    ],
    name: "setRegistrable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootNode",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct SoulRegistrar.NodeFeeConfig",
        name: "feeConfig",
        type: "tuple",
      },
    ],
    name: "setRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRelayer",
        type: "address",
      },
    ],
    name: "setRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610100604052601660c09081527f536f756c20563120454e5320537562646f6d61696e730000000000000000000060e052600c906200003f9082620002bd565b5060408051808201909152601681527f534f554c5f56315f454e535f535542444f4d41494e53000000000000000000006020820152600d90620000839082620002bd565b503480156200009157600080fd5b5060405162002f5338038062002f53833981016040819052620000b491620003a6565b620000bf33620000ec565b600160028190556001600160a01b03808416608052821660a052620000e49062000116565b5050620003de565b600180546001600160a01b0319169055620001138162000167602090811b6200163c17901c565b50565b62000120620001b7565b6006805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a5599060200160405180910390a150565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620002165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200024357607f821691505b6020821081036200026457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b857600081815260208120601f850160051c81016020861015620002935750805b601f850160051c820191505b81811015620002b4578281556001016200029f565b5050505b505050565b81516001600160401b03811115620002d957620002d962000218565b620002f181620002ea84546200022e565b846200026a565b602080601f831160018114620003295760008415620003105750858301515b600019600386901b1c1916600185901b178555620002b4565b600085815260208120601f198616915b828110156200035a5788860151825594840194600190910190840162000339565b5085821015620003795787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b0381168114620003a157600080fd5b919050565b60008060408385031215620003ba57600080fd5b620003c58362000389565b9150620003d56020840162000389565b90509250929050565b60805160a051612b256200042e6000396000818161064301528181611a5f0152611b2701526000818161051e01528181610a0f0152818161197001528181611a8e0152611bc90152612b256000f3fe60806040526004361061026a5760003560e01c80637d73b23111610153578063adce1c5f116100cb578063e30c39781161007f578063f2fde38b11610064578063f2fde38b14610717578063f60fd67b14610737578063fe5a53771461075757600080fd5b8063e30c3978146106d6578063e985e9c5146106f457600080fd5b8063c7630a4d116100b0578063c7630a4d14610680578063c87b56dd14610696578063d3c42489146106b657600080fd5b8063adce1c5f14610631578063b88d4fde1461066557600080fd5b80638da5cb5b1161012257806395d89b411161010757806395d89b41146105ee578063a22cb46514610603578063a6d4f04d1461061e57600080fd5b80638da5cb5b146105b057806394e8eb04146105ce57600080fd5b80637d73b2311461050c5780638406c079146105405780638ada6b0f146105555780638b45d08f1461057557600080fd5b806343fb5f69116101e65780636c0360eb116101b5578063715018a61161019a578063715018a6146104c257806375edcbe0146104d757806379ba5097146104f757600080fd5b80636c0360eb1461045957806370a08231146104a257600080fd5b806343fb5f69146103df57806355a8deab146103ff5780636352211e146104195780636548e9bc1461043957600080fd5b8063164e68de1161023d57806323b872dd1161022257806323b872dd14610365578063407ac1641461038057806342842e0e1461036557600080fd5b8063164e68de1461032157806318160ddd1461034157600080fd5b806301ffc9a71461026f57806306fdde03146102a4578063081812fc146102c6578063095ea7b3146102ff575b600080fd5b34801561027b57600080fd5b5061028f61028a36600461208f565b610784565b60405190151581526020015b60405180910390f35b3480156102b057600080fd5b506102b9610869565b60405161029b9190612121565b3480156102d257600080fd5b506102e76102e1366004612134565b50600090565b6040516001600160a01b03909116815260200161029b565b34801561030b57600080fd5b5061031f61031a366004612162565b6108f7565b005b34801561032d57600080fd5b5061031f61033c36600461218e565b610929565b34801561034d57600080fd5b5061035760095481565b60405190815260200161029b565b34801561037157600080fd5b5061031f61031a3660046121ab565b34801561038c57600080fd5b506103c061039b366004612134565b600760205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520161029b565b3480156103eb57600080fd5b5061031f6103fa366004612201565b610980565b34801561040b57600080fd5b5060065461028f9060ff1681565b34801561042557600080fd5b506102e7610434366004612134565b6109d0565b34801561044557600080fd5b5061031f61045436600461218e565b610a82565b34801561046557600080fd5b506102b96040518060400160405280601181526020017f68747470733a2f2f736f756c2e78797a2f00000000000000000000000000000081525081565b3480156104ae57600080fd5b506103576104bd36600461218e565b610ae5565b3480156104ce57600080fd5b5061031f610b84565b3480156104e357600080fd5b5061031f6104f236600461221c565b610b98565b34801561050357600080fd5b5061031f610c21565b34801561051857600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561054c57600080fd5b506102e7610caf565b34801561056157600080fd5b50600e546102e7906001600160a01b031681565b34801561058157600080fd5b5061028f61059036600461221c565b600560209081526000928352604080842090915290825290205460ff1681565b3480156105bc57600080fd5b506000546001600160a01b03166102e7565b3480156105da57600080fd5b5061031f6105e9366004612134565b610ce3565b3480156105fa57600080fd5b506102b9610d5c565b34801561060f57600080fd5b5061031f61031a36600461223e565b61031f61062c3660046122bf565b610d69565b34801561063d57600080fd5b506102e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561067157600080fd5b5061031f61031a3660046123ae565b34801561068c57600080fd5b5061035760085481565b3480156106a257600080fd5b506102b96106b1366004612134565b611080565b3480156106c257600080fd5b5061031f6106d1366004612437565b61127c565b3480156106e257600080fd5b506001546001600160a01b03166102e7565b34801561070057600080fd5b5061028f61070f3660046124ab565b600092915050565b34801561072357600080fd5b5061031f61073236600461218e565b61132a565b34801561074357600080fd5b5061031f6107523660046124e4565b6113a8565b34801561076357600080fd5b50610357610772366004612134565b60046020526000908152604090205481565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061081757507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061086357507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600c805461087690612562565b80601f01602080910402602001604051908101604052809291908181526020018280546108a290612562565b80156108ef5780601f106108c4576101008083540402835291602001916108ef565b820191906000526020600020905b8154815290600101906020018083116108d257829003601f168201915b505050505081565b6040517f25e9714f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610931611699565b4761093c82826116f3565b6040518181526001600160a01b0383169030907f94ff26d0039076ded638218748282b9661d9e3a2c9bf0cf46b9ce2405a410c769060200160405180910390a35050565b610988611699565b6006805460ff19168215159081179091556040519081527f2ae3428b787bbbae6c1ad4821665836aec54941d01822e9248cc9fa654e4a559906020015b60405180910390a150565b6000818152600a60205260408082205490517f02571be300000000000000000000000000000000000000000000000000000000815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be390602401602060405180830381865afa158015610a5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610863919061259c565b610a8a611699565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f09bf35b7806e61e7baf86e6547c4221f69d130ccc0a19215d064685a89464a70906020016109c5565b60006001600160a01b038216610b685760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506001600160a01b03166000908152600b602052604090205490565b610b8c611699565b610b966000611811565b565b610ba0610caf565b6001600160a01b0316336001600160a01b031614610bd0576040516282b42960e81b815260040160405180910390fd5b600082815260046020526040908190208290555182907ffd69edeceaf1d6832d935be1fba54ca93bf17e71520c6c9ffc08d6e9529f875790610c159084815260200190565b60405180910390a25050565b60015433906001600160a01b03168114610ca35760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f74207468652060448201527f6e6577206f776e657200000000000000000000000000000000000000000000006064820152608401610b5f565b610cac81611811565b50565b6003546000906001600160a01b031615610cd357506003546001600160a01b031690565b506000546001600160a01b031690565b610ceb611699565b612710811115610d27576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60088190556040518181527fec789caffc301be1dd1c40fb1a9c24451a547f9a8d295d86d04ef6f376d98e16906020016109c5565b600d805461087690612562565b60065460ff16610da5576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dad611837565b8483141580610dbc5750848114155b15610df3576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600088815260076020908152604091829020825180840190935280546001600160a01b0316835260010154908201819052341015610e5d576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600854600090879061271090610e7390826125cf565b8460200151610e8291906125e2565b610e8c91906125f9565b610e9691906125e2565b90508015610eee578151610eaa90826116f3565b81516040518281526001600160a01b039091169030907faa2f029dce3e2f28194bcef6e2dbdb92992140b3b6c14b9a34026b0b376c1bf39060200160405180910390a35b60005b87811015611069576000898983818110610f0d57610f0d61261b565b9050602002016020810190610f22919061218e565b8c898985818110610f3557610f3561261b565b9050602002810190610f479190612631565b604051602001610f5a9493929190612678565b6040516020818303038152906040528051906020012090506110568c8c8c8c86818110610f8957610f8961261b565b9050602002016020810190610f9e919061218e565b8b8b87818110610fb057610fb061261b565b9050602002810190610fc29190612631565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508d92508c915089905081811061100b5761100b61261b565b905060200281019061101d91906126ab565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525089925061188e915050565b5080611061816126f5565b915050610ef1565b5050506110766001600255565b5050505050505050565b606061108e82600954101590565b6111005760405162461bcd60e51b815260206004820152602360248201527f4552433732313a20717565727920666f72206e6f6e6578697374656e7420746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152608401610b5f565b6000828152600a6020526040902054600e546001600160a01b0316156111b857600e546040517ff67b80d800000000000000000000000000000000000000000000000000000000815260048101859052602481018390526001600160a01b039091169063f67b80d890604401600060405180830381865afa158015611189573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b1919081019061270f565b9392505050565b6000611251600c6111c886611c87565b846040518060400160405280601181526020017f68747470733a2f2f736f756c2e78797a2f000000000000000000000000000000815250866040516020016112119291906127bc565b60405160208183030381529060405261122989611c87565b60405160200161123d959493929190612831565b604051602081830303815290604052611d27565b90508060405160200161126491906129f7565b60405160208183030381529060405292505050919050565b611284610caf565b6001600160a01b0316336001600160a01b0316146112b4576040516282b42960e81b815260040160405180910390fd5b6000828152600760209081526040918290208351815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909116178155838201516001909101819055915191825283917f6ff8895cab9b0756060f51407ed2675e887fdbddebb7c41ce5de2ea3c23da3609101610c15565b611332611699565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff1990911681179091556113706000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60065460ff166113e4576040517fa753642a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000878960405160200161141492919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60408051601f19818403018152918152815160209283012060008781526005845282812082825290935291205490915060ff161561147e576040517f646cf55800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084815260056020908152604080832084845290915290819020805460ff19166001179055517f6352211e000000000000000000000000000000000000000000000000000000008152600481018990526001600160a01b038a1690636352211e90602401602060405180830381865afa158015611500573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611524919061259c565b6001600160a01b0316336001600160a01b031614611554576040516282b42960e81b815260040160405180910390fd5b6040516bffffffffffffffffffffffff1960608b901b166020820152603481018890527f2a0000000000000000000000000000000000000000000000000000000000000060548201526000906055016040516020818303038152906040528051906020012090506116308886338a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020808d0282810182019093528c82529093508c92508b91829185019084908082843760009201919091525089925061188e915050565b50505050505050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314610b965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b5f565b804710156117435760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610b5f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611790576040519150601f19603f3d011682016040523d82523d6000602084013e611795565b606091505b505090508061180c5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610b5f565b505050565b6001805473ffffffffffffffffffffffffffffffffffffffff19169055610cac8161163c565b60028054036118885760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b5f565b60028055565b6000858152600460205260409020546118a990839083611e7a565b6118df576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000836040516020016118f29190612a3c565b60408051601f1981840301815282825280516020918201209083018a9052908201819052915060009060600160408051808303601f190181529082905280516020909101207f02571be30000000000000000000000000000000000000000000000000000000082526004820181905291506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906302571be390602401602060405180830381865afa1580156119b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119db919061259c565b6001600160a01b031614611a1b576040517f73f81d0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f5ef2c7f000000000000000000000000000000000000000000000000000000000815260048101899052602481018390523060448201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166064830152600060848301527f00000000000000000000000000000000000000000000000000000000000000001690635ef2c7f09060a401600060405180830381600087803b158015611ad257600080fd5b505af1158015611ae6573d6000803e3d6000fd5b50506040517fd5fa2b00000000000000000000000000000000000000000000000000000000008152600481018490526001600160a01b0389811660248301527f000000000000000000000000000000000000000000000000000000000000000016925063d5fa2b009150604401600060405180830381600087803b158015611b6d57600080fd5b505af1158015611b81573d6000803e3d6000fd5b50506040517f06ab5923000000000000000000000000000000000000000000000000000000008152600481018b9052602481018590526001600160a01b0389811660448301527f00000000000000000000000000000000000000000000000000000000000000001692506306ab592391506064016020604051808303816000875af1158015611c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c389190612a58565b50611c438682611e90565b877fd6288dcb40622d12005699aa256293bdbd786df6f192b2a95bccdd5169a8e2018688604051611c75929190612a71565b60405180910390a25050505050505050565b60606000611c9483611f34565b600101905060008167ffffffffffffffff811115611cb457611cb4612421565b6040519080825280601f01601f191660200182016040528015611cde576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084611ce857509392505050565b60608151600003611d4657505060408051602081019091526000815290565b6000604051806060016040528060408152602001612ab06040913990506000600384516002611d759190612a9c565b611d7f91906125f9565b611d8a9060046125e2565b67ffffffffffffffff811115611da257611da2612421565b6040519080825280601f01601f191660200182016040528015611dcc576020820181803683370190505b509050600182016020820185865187015b80821015611e38576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611ddd565b5050600386510660018114611e545760028114611e6757611e6f565b603d6001830353603d6002830353611e6f565b603d60018303535b509195945050505050565b600082611e878584612016565b14949350505050565b80600a6000600960008154611ea4906126f5565b9190508190558152602001908152602001600020819055506001600b6000846001600160a01b03166001600160a01b031681526020019081526020016000206000828254611ef29190612a9c565b90915550506009546040516001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611f7d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611fa9576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611fc757662386f26fc10000830492506010015b6305f5e1008310611fdf576305f5e100830492506008015b6127108310611ff357612710830492506004015b60648310612005576064830492506002015b600a83106108635760010192915050565b600081815b845181101561205b576120478286838151811061203a5761203a61261b565b6020026020010151612063565b915080612053816126f5565b91505061201b565b509392505050565b600081831061207f5760008281526020849052604090206111b1565b5060009182526020526040902090565b6000602082840312156120a157600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146111b157600080fd5b60005b838110156120ec5781810151838201526020016120d4565b50506000910152565b6000815180845261210d8160208601602086016120d1565b601f01601f19169290920160200192915050565b6020815260006111b160208301846120f5565b60006020828403121561214657600080fd5b5035919050565b6001600160a01b0381168114610cac57600080fd5b6000806040838503121561217557600080fd5b82356121808161214d565b946020939093013593505050565b6000602082840312156121a057600080fd5b81356111b18161214d565b6000806000606084860312156121c057600080fd5b83356121cb8161214d565b925060208401356121db8161214d565b929592945050506040919091013590565b803580151581146121fc57600080fd5b919050565b60006020828403121561221357600080fd5b6111b1826121ec565b6000806040838503121561222f57600080fd5b50508035926020909101359150565b6000806040838503121561225157600080fd5b823561225c8161214d565b915061226a602084016121ec565b90509250929050565b60008083601f84011261228557600080fd5b50813567ffffffffffffffff81111561229d57600080fd5b6020830191508360208260051b85010111156122b857600080fd5b9250929050565b60008060008060008060008060a0898b0312156122db57600080fd5b8835975060208901359650604089013567ffffffffffffffff8082111561230157600080fd5b61230d8c838d01612273565b909850965060608b013591508082111561232657600080fd5b6123328c838d01612273565b909650945060808b013591508082111561234b57600080fd5b506123588b828c01612273565b999c989b5096995094979396929594505050565b60008083601f84011261237e57600080fd5b50813567ffffffffffffffff81111561239657600080fd5b6020830191508360208285010111156122b857600080fd5b6000806000806000608086880312156123c657600080fd5b85356123d18161214d565b945060208601356123e18161214d565b935060408601359250606086013567ffffffffffffffff81111561240457600080fd5b6124108882890161236c565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b600080828403606081121561244b57600080fd5b833592506040601f198201121561246157600080fd5b506040516040810181811067ffffffffffffffff8211171561248557612485612421565b60405260208401356124968161214d565b81526040939093013560208401525092909150565b600080604083850312156124be57600080fd5b82356124c98161214d565b915060208301356124d98161214d565b809150509250929050565b60008060008060008060008060c0898b03121561250057600080fd5b883561250b8161214d565b97506020890135965060408901359550606089013567ffffffffffffffff8082111561253657600080fd5b6125428c838d0161236c565b909750955060808b0135945060a08b013591508082111561234b57600080fd5b600181811c9082168061257657607f821691505b60208210810361259657634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156125ae57600080fd5b81516111b18161214d565b634e487b7160e01b600052601160045260246000fd5b81810381811115610863576108636125b9565b8082028115828204841417610863576108636125b9565b60008261261657634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261264857600080fd5b83018035915067ffffffffffffffff82111561266357600080fd5b6020019150368190038213156122b857600080fd5b6bffffffffffffffffffffffff198560601b16815283601482015281836034830137600091016034019081529392505050565b6000808335601e198436030181126126c257600080fd5b83018035915067ffffffffffffffff8211156126dd57600080fd5b6020019150600581901b36038213156122b857600080fd5b60006000198203612708576127086125b9565b5060010190565b60006020828403121561272157600080fd5b815167ffffffffffffffff8082111561273957600080fd5b818401915084601f83011261274d57600080fd5b81518181111561275f5761275f612421565b604051601f8201601f19908116603f0116810190838211818310171561278757612787612421565b816040528281528760208487010111156127a057600080fd5b6127b18360208301602088016120d1565b979650505050505050565b6060815260006127cf60608301856120f5565b8281036020840152600181527f2f000000000000000000000000000000000000000000000000000000000000006020820152604081019150508260408301529392505050565b600081516128278185602086016120d1565b9290920192915050565b7f7b226e616d65223a20220000000000000000000000000000000000000000000081526000600a6000885481600182811c91508083168061287357607f831692505b6020808410820361289257634e487b7160e01b86526022600452602486fd5b8180156128a657600181146128bf576128f0565b60ff198616888b01528785151586028b010196506128f0565b60008f81526020902060005b868110156128e65781548c82018b01529085019083016128cb565b505087858b010196505b507f20000000000000000000000000000000000000000000000000000000000000008652612921600187018e612815565b96508b87526129e56129bc6129b6612967612961858c017f222c2022696d616765223a202268747470733a2f2f0000000000000000000000815260150190565b8f612815565b7f222c202261747472696275746573223a5b7b202274726169745f74797065223a81527f202253657269616c222c202276616c7565223a20000000000000000000000000602082015260340190565b8c612815565b7f7d5d207d00000000000000000000000000000000000000000000000000000000815260040190565b9e9d5050505050505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251612a2f81601d8501602087016120d1565b91909101601d0192915050565b60008251612a4e8184602087016120d1565b9190910192915050565b600060208284031215612a6a57600080fd5b5051919050565b604081526000612a8460408301856120f5565b90506001600160a01b03831660208301529392505050565b80820180821115610863576108636125b956fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122042894c1e8fa9b6d317aa2f05a51c600849be6ee568da78b7853dfbd39953135d64736f6c63430008110033";
